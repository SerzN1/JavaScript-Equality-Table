{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["const $ = document.querySelector.bind(document);\nconst $$ = document.querySelectorAll.bind(document);\nconst cr = (el: string, className = \"\", text = \"\"): HTMLElement => {\n  const $el = document.createElement(el);\n  $el.className = className;\n  $el.textContent = text;\n  return $el;\n};\n\nclass ForComparison {\n  public asString: string = \"\";\n\n  constructor(private item) {\n    this.asString = `${item}`;\n\n    if (typeof item === \"string\") {\n      this.asString = `\"${item}\"`;\n    } else if (Array.isArray(this.item)) {\n      this.asString = JSON.stringify(this.item);\n    } else if (this.item instanceof Object) {\n      this.asString = \"{}\";\n    }\n  }\n\n  testResults(fc2, comparator = \"===\"): [string, any] {\n    const evalStr = \"\" + this.asString + comparator + fc2.asString;\n    return [evalStr, eval(\"(\" + evalStr + \")\")];\n  }\n\n  toString() {\n    return this.asString;\n  }\n}\n\nclass ComparisonTable {\n  constructor(private node: HTMLElement) {\n\n    const values = window[this.node.dataset.componentSetup];\n    if (!values) return;\n\n    const comps = values.map((v) => new ForComparison(v));\n    const $table = cr(\"table\", \"table\");\n\n    // Table header\n    const $headRow = cr(\"tr\", \"header\");\n    $headRow.appendChild(document.createElement(\"td\"));\n    $table.appendChild($headRow);\n    for (let comp of comps) {\n      const $el = cr(\"span\", \"rotate\", comp.asString);\n      const $td = cr(\"td\", \"term-vertical\");\n      $td.appendChild($el);\n      $headRow.appendChild($td);\n    }\n\n    // Table content\n    for (let compX of comps) {\n      const $tr = cr(\"tr\", \"row\");\n      const $td = cr(\"td\", \"term\", compX.asString);\n      $tr.appendChild($td);\n\n      for (let compY of comps) {\n        const [evalStr1, r1] = compX.testResults(compY, \"===\");\n        const [evalStr2, r2] = compX.testResults(compY, \"==\");\n\n        let className = \"\";\n        let status = \"\";\n        let txt = \"\";\n\n        if (r1 && r2) {\n          status = \"strictly equal\";\n          className = \"bg-green bg-no-invert\";\n          txt = \"=\";\n        } else if (r2) {\n          status = \"loosely equal\";\n          className = \"bg-red bg-no-invert\";\n          txt = \"&#8773;\";\n        } else {\n          status = \"not equal\";\n          className = \"bg-blue\";\n          txt = \"&#8800;\";\n        }\n\n        const $td = cr(\"td\", `equality ${className}`);\n        $td.innerHTML = `<div class=\"equality-item\"><code class=\"equality-text\">${txt}</code></div>`;\n        $td.setAttribute(\"data-title\", `${compX} ${status} ${compY}`);\n        $tr.appendChild($td);\n      }\n\n      $table.appendChild($tr);\n    }\n\n    this.node.appendChild($table);\n  }\n}\n\nconst componentsMap = {\n  ComparisonTable,\n};\n\n$$(\"[data-component]\").forEach((node) => {\n  const Component = componentsMap[node.dataset.component];\n  if (Component) {\n    new Component(node);\n  }\n});\n"],
  "mappings": "oEAAA,8BAAM,GAAI,SAAS,cAAc,KAAK,UAChC,GAAK,SAAS,iBAAiB,KAAK,UACpC,GAAK,CAAC,EAAY,EAAY,GAAI,EAAO,KAAoB,CACjE,GAAM,GAAM,SAAS,cAAc,GACnC,SAAI,UAAY,EAChB,EAAI,YAAc,EACX,GAGT,mBAAoB,CAGlB,YAAoB,EAAM,CAAN,YAFb,cAAmB,GAGxB,KAAK,SAAW,GAAG,IAEnB,AAAI,MAAO,IAAS,SAClB,KAAK,SAAW,IAAI,KACf,AAAI,MAAM,QAAQ,KAAK,MAC5B,KAAK,SAAW,KAAK,UAAU,KAAK,MAC3B,KAAK,eAAgB,SAC9B,MAAK,SAAW,MAIpB,YAAY,IAAK,WAAa,MAAsB,CAClD,GAAM,SAAU,GAAK,KAAK,SAAW,WAAa,IAAI,SACtD,MAAO,CAAC,QAAS,KAAK,IAAM,QAAU,MAGxC,UAAW,CACT,MAAO,MAAK,WAIhB,qBAAsB,CACpB,YAAoB,EAAmB,CAAnB,YAElB,GAAM,GAAS,OAAO,KAAK,KAAK,QAAQ,gBACxC,GAAI,CAAC,EAAQ,OAEb,GAAM,GAAQ,EAAO,IAAI,AAAC,GAAM,GAAI,eAAc,IAC5C,EAAS,GAAG,QAAS,SAGrB,EAAW,GAAG,KAAM,UAC1B,EAAS,YAAY,SAAS,cAAc,OAC5C,EAAO,YAAY,GACnB,OAAS,KAAQ,GAAO,CACtB,GAAM,GAAM,GAAG,OAAQ,SAAU,EAAK,UAChC,EAAM,GAAG,KAAM,iBACrB,EAAI,YAAY,GAChB,EAAS,YAAY,GAIvB,OAAS,KAAS,GAAO,CACvB,GAAM,GAAM,GAAG,KAAM,OACf,EAAM,GAAG,KAAM,OAAQ,EAAM,UACnC,EAAI,YAAY,GAEhB,OAAS,KAAS,GAAO,CACvB,GAAM,CAAC,EAAU,GAAM,EAAM,YAAY,EAAO,OAC1C,CAAC,EAAU,GAAM,EAAM,YAAY,EAAO,MAE5C,EAAY,GACZ,EAAS,GACT,EAAM,GAEV,AAAI,GAAM,EACR,GAAS,iBACT,EAAY,wBACZ,EAAM,KACD,AAAI,EACT,GAAS,gBACT,EAAY,sBACZ,EAAM,WAEN,GAAS,YACT,EAAY,UACZ,EAAM,WAGR,GAAM,GAAM,GAAG,KAAM,YAAY,KACjC,EAAI,UAAY,0DAA0D,iBAC1E,EAAI,aAAa,aAAc,GAAG,KAAS,KAAU,KACrD,EAAI,YAAY,GAGlB,EAAO,YAAY,GAGrB,KAAK,KAAK,YAAY,KAIpB,cAAgB,CACpB,iBAGF,GAAG,oBAAoB,QAAQ,AAAC,GAAS,CACvC,GAAM,GAAY,cAAc,EAAK,QAAQ,WAC7C,AAAI,GACF,GAAI,GAAU",
  "names": []
}
