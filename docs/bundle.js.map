{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["const TABLE_VALUES = window[\"TABLE_VALUES\"];\n\nconst $ = document.querySelector.bind(document);\nconst $$ = document.querySelectorAll.bind(document);\nconst cr = (el: string, className = \"\", text = \"\"): HTMLElement => {\n  const $el = document.createElement(el);\n  $el.className = className;\n  $el.textContent = text;\n  return $el;\n};\n\ninterface IComparator<T> {\n  testResults(comp: any): [string, T];\n}\n\ntype EqualityStatus = \"strictly equal\" | \"loosely equal\" | \"not equal\";\nclass EqualityComparison implements IComparator<EqualityStatus> {\n  public asString: string = \"\";\n\n  constructor(private item) {\n    this.asString = `${item}`;\n\n    if (typeof item === \"string\") {\n      this.asString = `\"${item}\"`;\n    } else if (Array.isArray(this.item)) {\n      this.asString = JSON.stringify(this.item);\n    } else if (this.item instanceof Object) {\n      this.asString = \"{}\";\n    }\n  }\n\n  testResults(fc2: any): [string, EqualityStatus] {\n    const evalStrict = \"\" + this.asString + \"===\" + fc2.asString;\n    const evalLoose = \"\" + this.asString + \"==\" + fc2.asString;\n    const r1 = (0, eval)(\"(\" + evalStrict + \")\");\n    const r2 = (0, eval)(\"(\" + evalLoose + \")\");\n\n    let compStatus: EqualityStatus = \"not equal\";\n\n    if (r1 && r2) {\n      compStatus = \"strictly equal\";\n    } else if (r2) {\n      compStatus = \"loosely equal\";\n    }\n\n    return [`${this.asString} ${compStatus} ${fc2}`, compStatus];\n  }\n\n  toString() {\n    return this.asString;\n  }\n}\n\nclass IfComparison implements IComparator<boolean> {\n  public asString = \"if (x)\";\n\n  testResults(comp: any): [string, boolean] {\n    const evalStr = `${comp} ? true : false`;\n    const res = (0, eval)(\"(\" + evalStr + \")\");\n    return [`if (${comp}) is ${res}`, res];\n  }\n}\n\nclass ComparisonTable {\n  constructor(private node: HTMLElement) {\n    if (!TABLE_VALUES) return;\n\n    const ifComp = new IfComparison();\n    const comps = TABLE_VALUES.map((v) => new EqualityComparison(v));\n    const $table = cr(\"table\", \"table\");\n\n    // Table header\n    const $headRow = cr(\"tr\", \"header\");\n    $headRow.appendChild(document.createElement(\"td\"));\n    $table.appendChild($headRow);\n\n    $headRow.appendChild(this.createTableHeaderCell(ifComp.asString));\n    for (let comp of comps) {\n      $headRow.appendChild(this.createTableHeaderCell(comp.asString));\n    }\n\n    // Table content\n    for (let compX of comps) {\n      const $tr = cr(\"tr\", \"row\");\n      const $td = cr(\"td\", \"term\", compX.asString);\n      $tr.appendChild($td);\n\n      const [ifString, ifRes] = ifComp.testResults(compX);\n      const ifClassName = `bg-yellow ${ifRes ? \"bg-no-invert\" : \"\"}`;\n\n      $tr.appendChild(\n        this.createTableCell(ifClassName, ifRes ? \"\u2714\uFE0F\" : \"-\", ifString)\n      );\n\n      const txtByCompStatus: Record<EqualityStatus, string> = {\n        \"strictly equal\": \"=\",\n        \"loosely equal\": \"&#8773;\",\n        \"not equal\": \"&#8800;\",\n      };\n\n      const classNameByCompStatus: Record<EqualityStatus, string> = {\n        \"strictly equal\": \"bg-green bg-no-invert\",\n        \"loosely equal\": \"bg-red bg-no-invert\",\n        \"not equal\": \"bg-blue\",\n      };\n\n      for (let compY of comps) {\n        const [compString, compStatus] = compX.testResults(compY);\n\n        $tr.appendChild(\n          this.createTableCell(\n            classNameByCompStatus[compStatus],\n            txtByCompStatus[compStatus],\n            compString\n          )\n        );\n      }\n\n      $table.appendChild($tr);\n    }\n\n    this.node.appendChild($table);\n  }\n\n  createTableHeaderCell(textContent: string) {\n    const $el = cr(\"span\", \"rotate\", textContent);\n    const $td = cr(\"td\", \"term-vertical\");\n    $td.appendChild($el);\n    return $td;\n  }\n  createTableCell(className: string, textContent: string, title: string) {\n    const $td = cr(\"td\", `equality ${className}`);\n    $td.innerHTML = `<code class=\"equality-item\">${textContent}</code>`;\n    $td.setAttribute(\"data-title\", title);\n    return $td;\n  }\n}\n\nconst componentsMap = {\n  ComparisonTable,\n};\n\n$$(\"[data-component]\").forEach((node) => {\n  const Component = componentsMap[node.dataset.component];\n  if (Component) {\n    new Component(node);\n  }\n});\n"],
  "mappings": "MAAA,GAAM,GAAe,OAAO,aAEtB,EAAI,SAAS,cAAc,KAAK,UAChC,EAAK,SAAS,iBAAiB,KAAK,UACpC,EAAK,CAAC,EAAY,EAAY,GAAI,EAAO,KAAoB,CACjE,GAAM,GAAM,SAAS,cAAc,GACnC,SAAI,UAAY,EAChB,EAAI,YAAc,EACX,GAQT,OAAgE,CAG9D,YAAoB,EAAM,CAAN,YAFb,cAAmB,GAGxB,KAAK,SAAW,GAAG,IAEnB,AAAI,MAAO,IAAS,SAClB,KAAK,SAAW,IAAI,KACf,AAAI,MAAM,QAAQ,KAAK,MAC5B,KAAK,SAAW,KAAK,UAAU,KAAK,MAC3B,KAAK,eAAgB,SAC9B,MAAK,SAAW,MAIpB,YAAY,EAAoC,CAC9C,GAAM,GAAa,GAAK,KAAK,SAAW,MAAQ,EAAI,SAC9C,EAAY,GAAK,KAAK,SAAW,KAAO,EAAI,SAC5C,EAAM,GAAG,MAAM,IAAM,EAAa,KAClC,EAAM,GAAG,MAAM,IAAM,EAAY,KAEnC,EAA6B,YAEjC,MAAI,IAAM,EACR,EAAa,iBACJ,GACT,GAAa,iBAGR,CAAC,GAAG,KAAK,YAAY,KAAc,IAAO,GAGnD,UAAW,CACT,MAAO,MAAK,WAIhB,OAAmD,CAAnD,aArDA,CAsDS,cAAW,SAElB,YAAY,EAA8B,CACxC,GAAM,GAAU,GAAG,mBACb,EAAO,GAAG,MAAM,IAAM,EAAU,KACtC,MAAO,CAAC,OAAO,SAAY,IAAO,KAItC,OAAsB,CACpB,YAAoB,EAAmB,CAAnB,YAClB,GAAI,CAAC,EAAc,OAEnB,GAAM,GAAS,GAAI,GACb,EAAQ,EAAa,IAAI,AAAC,GAAM,GAAI,GAAmB,IACvD,EAAS,EAAG,QAAS,SAGrB,EAAW,EAAG,KAAM,UAC1B,EAAS,YAAY,SAAS,cAAc,OAC5C,EAAO,YAAY,GAEnB,EAAS,YAAY,KAAK,sBAAsB,EAAO,WACvD,OAAS,KAAQ,GACf,EAAS,YAAY,KAAK,sBAAsB,EAAK,WAIvD,OAAS,KAAS,GAAO,CACvB,GAAM,GAAM,EAAG,KAAM,OACf,EAAM,EAAG,KAAM,OAAQ,EAAM,UACnC,EAAI,YAAY,GAEhB,GAAM,CAAC,EAAU,GAAS,EAAO,YAAY,GACvC,EAAc,aAAa,EAAQ,eAAiB,KAE1D,EAAI,YACF,KAAK,gBAAgB,EAAa,EAAQ,eAAO,IAAK,IAGxD,GAAM,GAAkD,CACtD,iBAAkB,IAClB,gBAAiB,UACjB,YAAa,WAGT,EAAwD,CAC5D,iBAAkB,wBAClB,gBAAiB,sBACjB,YAAa,WAGf,OAAS,KAAS,GAAO,CACvB,GAAM,CAAC,EAAY,GAAc,EAAM,YAAY,GAEnD,EAAI,YACF,KAAK,gBACH,EAAsB,GACtB,EAAgB,GAChB,IAKN,EAAO,YAAY,GAGrB,KAAK,KAAK,YAAY,GAGxB,sBAAsB,EAAqB,CACzC,GAAM,GAAM,EAAG,OAAQ,SAAU,GAC3B,EAAM,EAAG,KAAM,iBACrB,SAAI,YAAY,GACT,EAET,gBAAgB,EAAmB,EAAqB,EAAe,CACrE,GAAM,GAAM,EAAG,KAAM,YAAY,KACjC,SAAI,UAAY,+BAA+B,WAC/C,EAAI,aAAa,aAAc,GACxB,IAIL,EAAgB,CACpB,mBAGF,EAAG,oBAAoB,QAAQ,AAAC,GAAS,CACvC,GAAM,GAAY,EAAc,EAAK,QAAQ,WAC7C,AAAI,GACF,GAAI,GAAU",
  "names": []
}
